{
  "data": {
    "price": 150,
    "name": "Laptop",
    "quantity": 3,
    "user": {
      "birthDate": "1992-09-18",
      "membershipLevel": "GOLD"
    },
    "order": {
      "total": 450,
      "items": 3
    }
  },
  "businessRule": {
    "name": "ComplexBusinessRulePackage",
    "imports": [
      "com.fasterxml.jackson.databind.JsonNode",
      "com.springboot.project.util.JsonNodeHelper",
      "com.springboot.project.util.DateTimeHelper",
      "java.time.LocalDate"
    ],
    "globals": [
      {
        "type": "com.springboot.project.model.ResultObject",
        "identifier": "result"
      }
    ],
    "rules": [
      {
        "rule": "HighValueOrderRule",
        "when": [
          {
            "identifier": "data",
            "type": "JsonNode",
            "conditions": [
              "JsonNodeHelper.getChild(data, \"order\").get(\"total\").asInt() > 400",
              "JsonNodeHelper.getChild(data, \"order\").get(\"items\").asInt() >= 3"
            ]
          }
        ],
        "then": [
          {
            "actions": [
              "System.out.println(\"High value order detected with total: \" + JsonNodeHelper.getChild(data, \"order\").get(\"total\").asInt())",
              "((com.fasterxml.jackson.databind.node.ObjectNode) result.getResult()).put(\"highValueOrder\", true)"
            ]
          }
        ]
      },
      {
        "rule": "PremiumMemberDiscountRule",
        "when": [
          {
            "identifier": "data",
            "type": "JsonNode",
            "conditions": [
              "JsonNodeHelper.getChild(data, \"user\").get(\"membershipLevel\").asText().equals(\"GOLD\") || JsonNodeHelper.getChild(data, \"user\").get(\"membershipLevel\").asText().equals(\"PLATINUM\")",
              "JsonNodeHelper.getChild(data, \"order\").get(\"total\").asInt() > 300"
            ]
          }
        ],
        "then": [
          {
            "actions": [
              "System.out.println(\"Premium member eligible for discount: \" + JsonNodeHelper.getChild(data, \"user\").get(\"membershipLevel\").asText())",
              "((com.fasterxml.jackson.databind.node.ObjectNode) result.getResult()).put(\"eligibleForDiscount\", true)"
            ]
          }
        ]
      },
      {
        "rule": "YoungUserSpecialRule",
        "when": [
          {
            "identifier": "data",
            "type": "JsonNode",
            "conditions": [
              "DateTimeHelper.calculateAge(DateTimeHelper.toLocalDate(JsonNodeHelper.getChild(data, \"user\").get(\"birthDate\").asText()), LocalDate.now()) < 30",
              "data.get(\"price\").asInt() > 100",
              "data.get(\"quantity\").asInt() > 2"
            ]
          }
        ],
        "then": [
          {
            "actions": [
              "System.out.println(\"Young user buying expensive product with quantity > 2\")",
              "((com.fasterxml.jackson.databind.node.ObjectNode) result.getResult()).put(\"youngUserBonus\", true)"
            ]
          }
        ]
      },
      {
        "rule": "NotUserSpecialRule",
        "when": [
          {
            "identifier": "data",
            "type": "JsonNode",
            "conditions": [
              "DateTimeHelper.calculateAge(DateTimeHelper.toLocalDate(JsonNodeHelper.getChild(data, \"user\").get(\"birthDate\").asText()), LocalDate.now()) >= 30"
            ]
          }
        ],
        "then": [
          {
            "actions": [
              "System.out.println(\"Normal adult user with age >= 30\")",
              "((com.fasterxml.jackson.databind.node.ObjectNode) result.getResult()).put(\"youngUserBonus\", false)"
            ]
          }
        ]
      }
    ]
  }
}